#!/usr/bin/python3 
"""
Copyright 2020-2021 Salvatore Barone <salvatore.barone@unina.it>

This file is part of PVMHDMLL

This is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 3 of the License, or any later version.

This is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
more details.

You should have received a copy of the GNU General Public License along with
RMEncoder; if not, write to the Free Software Foundation, Inc., 51 Franklin
Street, Fifth Floor, Boston, MA 02110-1301, USA.
"""
import sys
import getopt

from src.PMMLParser import *
from src.TreeModel import *
from src.HDLGenerator import *

def helpme():
    print("pvmhdmll - a VHDL source code generator for PMML models")
    print("   -h|--help:   print this help screen.")
    print("   -i|--input:  specify the input PMML file to be converted in VHDL.")
    print("   -o|--output: specify the output directory in which VHDL source file will be generated.")
    print("   -p|--print:  enable print.")
    print("You MUST define ALL the mentioned parameters.")

## Command-line parsing
try:
    options, remainder = getopt.getopt(sys.argv[1:], 'i:o:hp', ['input=', 'output=', 'print', 'help'])
except getopt.GetoptError as err:
        print(err)  
        helpme()
        sys.exit(2)

print_tree = False
for opt, arg in options:
    if opt in ('-h', '--help'):
        helpme()
        sys.exit(2)
    elif opt in ('-i', '--input'):
        input_pmml_file = arg
    elif opt in ('-o', '--output'):
        output_dir = arg
    elif opt in ('-p', '--print'):
        print_tree = True

## Here we go...
try:
    print("Input file:      ", input_pmml_file)
    print("Output directury:", output_dir)
    model = PMMLParser(input_pmml_file, print_tree)
    generator = HDLGenerator(model.get_features(), model.get_classes(), model.get_trees())
    generator.generate(output_dir)
       

except NameError as err:
    print (err.message)
    helpme()
    sys.exit(2)








