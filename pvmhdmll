#!/usr/bin/python3 
import sys
import getopt

from src.PMMLParser import *
from src.TreeModel import *

def helpme():
    print("pvmhdmll - a VHDL source code generator for PMML models")
    print("   -h|--help:   print this help screen.")
    print("   -i|--input:  specify the input PMML file to be converted in VHDL.")
    print("   -c|--conf:   specify the approximate configuration file (not supported yet).")
    print("   -o|--output: specify the output directory in which VHDL source file will be generated.")
    print("You MUST define ALL the mentioned parameters.")

## Command-line parsing
try:
    options, remainder = getopt.getopt(sys.argv[1:], 'i:o:c:h', ['input=', 'output=', 'config=', 'help'])
except getopt.GetoptError as err:
        print(err)  
        helpme()
        sys.exit(2)

for opt, arg in options:
    if opt in ('-h', '--help'):
        helpme()
        sys.exit(2)
    elif opt in ('-i', '--input'):
        input_pmml_file = arg
    elif opt in ('-o', '--output'):
        output_dir = arg
    elif opt in ('-c', '--config'):
        config_file = arg
## Here we go...
try:
    print("Input file:      ", input_pmml_file)
    print("Config. file:    ", config_file)
    print("Output directury:", output_dir)
    model = PMMLParser(input_pmml_file)

    print("Classes: ", model.get_classes())
    print("Features:", model.get_features())
    for tree in model.get_trees():
        tree.print()
        print("Decision boxes", tree.get_decision_boxes())
        print("Leaves",tree.get_leaves())
        print("Assertions", tree.get_assertion_functions(model.get_classes()))
        

except NameError as err:
    print (err.message)
    helpme()
    sys.exit(2)








