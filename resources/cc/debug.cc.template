#include <iostream>
#include <bitset>
#include "classifier.h"

void print_binary_64(std::ostream& stream, void * const data)
{
  unsigned long * udata = (unsigned long *)data;
  stream << std::bitset<64>(*udata);
}

int main()
{
  {% for feature in features -%}
  {{feature['type']}} data_{{feature['name']}};
  {% endfor %}
  {% for predicted_class in classes -%}
  int class_{{predicted_class}};
  {% endfor %}

  {% for feature in features -%}
  data_{{feature['name']}} = 0;
  {% endfor %}
  
  {% for feature in features -%}
  std::cout <<"{{feature['name']}}: " <<data_{{feature['name']}} << " ";
  print_binary_64(std::cout,&data_{{feature['name']}});
  std::cout << std::endl;
  {% endfor %}
  
  {% for predicted_class in classes -%}
  class_{{predicted_class}} = 0;
  {% endfor %}   

  classifier({% for feature in features -%}{{"data_"}}{{feature['name']}},{% endfor %}{% for predicted_class in classes -%}{{"&class_"}}{{predicted_class}}{{", " if not loop.last else ");"}}{% endfor %}
  {% for predicted_class in classes -%}
  std::cout << std::bitset<1>(class_{{predicted_class}}); 
  std::cout <<{{"\" \"" if not loop.last else "std::endl"}};
  {% endfor %}
}
